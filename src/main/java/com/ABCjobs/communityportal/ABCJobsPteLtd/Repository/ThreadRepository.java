package com.ABCjobs.communityportal.ABCJobsPteLtd.Repository;

import java.util.List;

import javax.transaction.Transactional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.ABCjobs.communityportal.ABCJobsPteLtd.DTO.Thread;

/**
 * ThreadRepository --- DAO repository for accessing thread repository.
 * @author John Daniel Tejero
 *
 */
public interface ThreadRepository extends JpaRepository<Thread, Integer>{
	
	/**
	 * findByUserId --- auto generated query by the JPA
	 * @param uid --- refers to user id
	 * @return Thread object
	 */
	public Thread findByUserId(int uid);
	
	/**
	 * findByThreadId --- auto generated query by the JPA
	 * @param thid --- refers to thread id
	 * @return Thread object
	 */
	public Thread findByThreadId(int thid);
	
	/**
	 * deleteByThreadId --- method for deleting thread from the database
	 * @param thid --- refers to the thread id
	 */
	@Modifying
	@Transactional
	@Query("delete from Thread where threadId = :threadID")
	public void deleteByThreadId(@Param("threadID")int thid);
	
	/**
	 * deleteByUserId --- method for deleting all threads from user id
	 * @param id --- refers to the user id
	 */
	@Modifying
	@Transactional
	@Query("delete from Thread where userId = :uid")
	public void deleteByUserId(@Param("uid")int id);
	
	/**
	 * findAllByOrderByThreadIdDesc --- auto generated query by the JPA
	 * @return List<Thread> --- list of threads by order
	 */
	public List<Thread> findAllByOrderByThreadIdDesc();
	
	/**
	 * findAllByUserIdOrderByPostedDesc --- auto generated by the JPA
	 * @param uid --- refers to the user profile
	 * @return List<Thread> --- list of threads ordered by date posted
	 */
	public List<Thread>findAllByUserIdOrderByPostedDesc(int uid);
}
